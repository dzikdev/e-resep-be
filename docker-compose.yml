version: '3.9'

services:
  postgres:
    image: postgres
    container_name: postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - '${DB_PORT}:${DB_PORT}'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${DB_NAME} -U ${DB_USERNAME}"]
      interval: 10s
      timeout: 10s
      retries: 10
    volumes:
      - postgres_data:/var/lib/postgresql/data

  migrate:
    image: migrate/migrate
    container_name: migrate
    volumes:
      - ./db/migrations/:/migrations
    command:
      [
        '-path',
        '/migrations',
        '-database',
        'postgres://${DB_USERNAME}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?sslmode=disable',
        'up'
      ]
    depends_on:
      postgres:
        condition: service_healthy
    links:
      - postgres
  app:
    container_name: app
    build:
      context: .
      dockerfile: ./build/http/Dockerfile
    ports:
      - '${APP_PORT}:${APP_PORT}'
    command: e-resep-service http
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    links:
      - postgres
volumes:
    postgres_data:
      driver: local